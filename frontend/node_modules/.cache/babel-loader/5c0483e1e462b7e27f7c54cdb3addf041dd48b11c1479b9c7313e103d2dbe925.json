{"ast":null,"code":"import _objectSpread from\"/Users/azrayje/Documents/doculaw-ai/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// File size formatting\nexport const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};// Date formatting\nexport const formatDate=date=>{const d=typeof date==='string'?new Date(date):date;return d.toLocaleDateString('en-US',{year:'numeric',month:'short',day:'numeric',hour:'2-digit',minute:'2-digit'});};export const formatRelativeTime=date=>{const d=typeof date==='string'?new Date(date):date;const now=new Date();const diffInSeconds=Math.floor((now.getTime()-d.getTime())/1000);if(diffInSeconds<60)return'just now';if(diffInSeconds<3600)return\"\".concat(Math.floor(diffInSeconds/60),\" minutes ago\");if(diffInSeconds<86400)return\"\".concat(Math.floor(diffInSeconds/3600),\" hours ago\");if(diffInSeconds<2592000)return\"\".concat(Math.floor(diffInSeconds/86400),\" days ago\");return formatDate(d);};// Text processing\nexport const truncateText=(text,maxLength)=>{if(text.length<=maxLength)return text;return text.slice(0,maxLength)+'...';};export const highlightText=(text,searchTerm)=>{if(!searchTerm)return text;const regex=new RegExp(\"(\".concat(searchTerm,\")\"),'gi');return text.replace(regex,'<mark>$1</mark>');};export const extractKeywords=text=>{const commonWords=new Set(['the','be','to','of','and','a','in','that','have','it','for','not','on','with','he','as','you','do','at','this']);return text.toLowerCase().replace(/[^\\w\\s]/g,'').split(/\\s+/).filter(word=>word.length>3&&!commonWords.has(word)).slice(0,10);};// Legal document helpers\nexport const calculateComplexity=text=>{const words=text.split(/\\s+/);const avgWordLength=words.reduce((sum,word)=>sum+word.length,0)/words.length;const sentences=text.split(/[.!?]+/).filter(s=>s.trim().length>0);const avgSentenceLength=words.length/sentences.length;// Legal complexity indicators\nconst legalTerms=['whereas','heretofore','pursuant','notwithstanding','aforementioned','covenant','indemnify','tortious','subpoena','affidavit'];const legalTermCount=legalTerms.reduce((count,term)=>{return count+(text.toLowerCase().includes(term)?1:0);},0);const complexityScore=avgWordLength*0.3+avgSentenceLength*0.4+legalTermCount*0.3;if(complexityScore<8)return'low';if(complexityScore<15)return'medium';return'high';};export const getDocumentTypeFromMimeType=mimeType=>{const typeMap={'application/pdf':'PDF Document','application/msword':'Word Document','application/vnd.openxmlformats-officedocument.wordprocessingml.document':'Word Document','text/plain':'Text Document','text/html':'HTML Document','application/rtf':'RTF Document'};return typeMap[mimeType]||'Unknown Document';};// Validation helpers\nexport const isValidFileType=(file,acceptedTypes)=>{return acceptedTypes.indexOf(file.type)!==-1;};export const isValidFileSize=(file,maxSizeInMB)=>{const maxSizeInBytes=maxSizeInMB*1024*1024;return file.size<=maxSizeInBytes;};// Search helpers\nexport const buildSearchQuery=(query,filters)=>{return{query:query.trim(),filters,limit:20,offset:0};};// Error handling\nexport const getErrorMessage=error=>{var _error$response,_error$response$data;if((_error$response=error.response)!==null&&_error$response!==void 0&&(_error$response$data=_error$response.data)!==null&&_error$response$data!==void 0&&_error$response$data.message)return error.response.data.message;if(error.message)return error.message;return'An unexpected error occurred';};// CSS class utilities\nexport const clsx=function(){for(var _len=arguments.length,classes=new Array(_len),_key=0;_key<_len;_key++){classes[_key]=arguments[_key];}return classes.filter(Boolean).join(' ');};// Local storage helpers\nexport const storage={get:key=>{try{const item=localStorage.getItem(key);return item?JSON.parse(item):null;}catch(_unused){return null;}},set:(key,value)=>{try{localStorage.setItem(key,JSON.stringify(value));}catch(error){console.error('Failed to save to localStorage:',error);}},remove:key=>{localStorage.removeItem(key);},clear:()=>{localStorage.clear();}};// Generate unique IDs\nexport const generateId=()=>{return Date.now().toString(36)+Math.random().toString(36).substr(2);};// User data management for onboarding\n// Save user profile data to user.json\nexport const saveUserProfile=async profileData=>{try{const profile=_objectSpread(_objectSpread({},profileData),{},{id:generateUserId(),dateCompleted:new Date().toISOString(),lastUpdated:new Date().toISOString()});// Save to localStorage for immediate access\nlocalStorage.setItem('doculaw_user_profile',JSON.stringify(profile));localStorage.setItem('doculaw_onboarding',JSON.stringify(profileData));// Log the complete user profile structure for LLM integration\nconst profileForLLM={profile,formattedContext:formatUserContextForLLM(profile),savedAt:new Date().toISOString()};console.log('=== USER PROFILE SAVED FOR LLM INTEGRATION ===');console.log(JSON.stringify(profileForLLM,null,2));console.log('=== END USER PROFILE DATA ===');return profile;}catch(error){console.error('Error saving user profile:',error);throw error;}};// Retrieve user profile data\nexport const getUserProfile=()=>{try{const stored=localStorage.getItem('doculaw_user_profile');return stored?JSON.parse(stored):null;}catch(error){console.error('Error retrieving user profile:',error);return null;}};// Generate a unique user ID\nconst generateUserId=()=>{return\"user_\".concat(Date.now(),\"_\").concat(Math.random().toString(36).substr(2,9));};// Get user preferences formatted for LLM context\nexport const getUserContextForLLM=()=>{const profile=getUserProfile();if(!profile)return'';return formatUserContextForLLM(profile);};// Helper function to format user profile for LLM context\nconst formatUserContextForLLM=profile=>{return\"User Profile:\\n- Name: \".concat(profile.name,\"\\n- Primary Language: \").concat(profile.primaryLanguage,\"\\n- English Proficiency: \").concat(profile.englishProficiency,\"\\n- Legal Experience: \").concat(profile.legalExperience,\"\\n- Document Types Needed: \").concat(profile.primaryNeeds.join(', '),\"\\n- Reading Preference: \").concat(profile.readingPreference,\"\\n- Communication Style: \").concat(profile.communicationStyle,\"\\n- Onboarding Completed: \").concat(profile.dateCompleted);};","map":{"version":3,"names":["formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","date","d","Date","toLocaleDateString","year","month","day","hour","minute","formatRelativeTime","now","diffInSeconds","getTime","concat","truncateText","text","maxLength","length","slice","highlightText","searchTerm","regex","RegExp","replace","extractKeywords","commonWords","Set","toLowerCase","split","filter","word","has","calculateComplexity","words","avgWordLength","reduce","sum","sentences","s","trim","avgSentenceLength","legalTerms","legalTermCount","count","term","includes","complexityScore","getDocumentTypeFromMimeType","mimeType","typeMap","isValidFileType","file","acceptedTypes","indexOf","type","isValidFileSize","maxSizeInMB","maxSizeInBytes","size","buildSearchQuery","query","filters","limit","offset","getErrorMessage","error","_error$response","_error$response$data","response","data","message","clsx","_len","arguments","classes","Array","_key","Boolean","join","storage","get","key","item","localStorage","getItem","JSON","parse","_unused","set","value","setItem","stringify","console","remove","removeItem","clear","generateId","toString","random","substr","saveUserProfile","profileData","profile","_objectSpread","id","generateUserId","dateCompleted","toISOString","lastUpdated","profileForLLM","formattedContext","formatUserContextForLLM","savedAt","getUserProfile","stored","getUserContextForLLM","name","primaryLanguage","englishProficiency","legalExperience","primaryNeeds","readingPreference","communicationStyle"],"sources":["/Users/azrayje/Documents/doculaw-ai/frontend/src/utils/helpers.ts"],"sourcesContent":["// File size formatting\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n// Date formatting\nexport const formatDate = (date: Date | string): string => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  return d.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n};\n\nexport const formatRelativeTime = (date: Date | string): string => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  const now = new Date();\n  const diffInSeconds = Math.floor((now.getTime() - d.getTime()) / 1000);\n  \n  if (diffInSeconds < 60) return 'just now';\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\n  if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)} days ago`;\n  \n  return formatDate(d);\n};\n\n// Text processing\nexport const truncateText = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength) return text;\n  return text.slice(0, maxLength) + '...';\n};\n\nexport const highlightText = (text: string, searchTerm: string): string => {\n  if (!searchTerm) return text;\n  \n  const regex = new RegExp(`(${searchTerm})`, 'gi');\n  return text.replace(regex, '<mark>$1</mark>');\n};\n\nexport const extractKeywords = (text: string): string[] => {\n  const commonWords = new Set([\n    'the', 'be', 'to', 'of', 'and', 'a', 'in', 'that', 'have', 'it',\n    'for', 'not', 'on', 'with', 'he', 'as', 'you', 'do', 'at', 'this'\n  ]);\n  \n  return text\n    .toLowerCase()\n    .replace(/[^\\w\\s]/g, '')\n    .split(/\\s+/)\n    .filter(word => word.length > 3 && !commonWords.has(word))\n    .slice(0, 10);\n};\n\n// Legal document helpers\nexport const calculateComplexity = (text: string): 'low' | 'medium' | 'high' => {\n  const words = text.split(/\\s+/);\n  const avgWordLength = words.reduce((sum, word) => sum + word.length, 0) / words.length;\n  const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 0);\n  const avgSentenceLength = words.length / sentences.length;\n  \n  // Legal complexity indicators\n  const legalTerms = [\n    'whereas', 'heretofore', 'pursuant', 'notwithstanding', 'aforementioned',\n    'covenant', 'indemnify', 'tortious', 'subpoena', 'affidavit'\n  ];\n  \n  const legalTermCount = legalTerms.reduce((count, term) => {\n    return count + (text.toLowerCase().includes(term) ? 1 : 0);\n  }, 0);\n  \n  const complexityScore = (avgWordLength * 0.3) + (avgSentenceLength * 0.4) + (legalTermCount * 0.3);\n  \n  if (complexityScore < 8) return 'low';\n  if (complexityScore < 15) return 'medium';\n  return 'high';\n};\n\nexport const getDocumentTypeFromMimeType = (mimeType: string): string => {\n  const typeMap: Record<string, string> = {\n    'application/pdf': 'PDF Document',\n    'application/msword': 'Word Document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'Word Document',\n    'text/plain': 'Text Document',\n    'text/html': 'HTML Document',\n    'application/rtf': 'RTF Document',\n  };\n  \n  return typeMap[mimeType] || 'Unknown Document';\n};\n\n// Validation helpers\nexport const isValidFileType = (file: File, acceptedTypes: string[]): boolean => {\n  return acceptedTypes.indexOf(file.type) !== -1;\n};\n\nexport const isValidFileSize = (file: File, maxSizeInMB: number): boolean => {\n  const maxSizeInBytes = maxSizeInMB * 1024 * 1024;\n  return file.size <= maxSizeInBytes;\n};\n\n// Search helpers\nexport const buildSearchQuery = (\n  query: string,\n  filters?: {\n    documentType?: string[];\n    dateRange?: { start: Date; end: Date };\n    complexity?: string[];\n  }\n): any => {\n  return {\n    query: query.trim(),\n    filters,\n    limit: 20,\n    offset: 0,\n  };\n};\n\n// Error handling\nexport const getErrorMessage = (error: any): string => {\n  if (error.response?.data?.message) return error.response.data.message;\n  if (error.message) return error.message;\n  return 'An unexpected error occurred';\n};\n\n// CSS class utilities\nexport const clsx = (...classes: (string | undefined | null | boolean)[]): string => {\n  return classes.filter(Boolean).join(' ');\n};\n\n// Local storage helpers\nexport const storage = {\n  get: (key: string): any => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    } catch {\n      return null;\n    }\n  },\n  \n  set: (key: string, value: any): void => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error('Failed to save to localStorage:', error);\n    }\n  },\n  \n  remove: (key: string): void => {\n    localStorage.removeItem(key);\n  },\n  \n  clear: (): void => {\n    localStorage.clear();\n  },\n};\n\n// Generate unique IDs\nexport const generateId = (): string => {\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\n\n// User data management for onboarding\nexport interface UserProfile {\n  id: string;\n  name: string;\n  primaryLanguage: string;\n  englishProficiency: 'beginner' | 'intermediate' | 'advanced';\n  legalExperience: 'none' | 'some' | 'experienced';\n  primaryNeeds: string[];\n  readingPreference: 'simple' | 'standard' | 'detailed';\n  communicationStyle: 'visual' | 'text' | 'audio';\n  onboardingCompleted: boolean;\n  dateCompleted: string;\n  lastUpdated: string;\n}\n\n// Save user profile data to user.json\nexport const saveUserProfile = async (profileData: Omit<UserProfile, 'id' | 'dateCompleted' | 'lastUpdated'>): Promise<UserProfile> => {\n  try {\n    const profile: UserProfile = {\n      ...profileData,\n      id: generateUserId(),\n      dateCompleted: new Date().toISOString(),\n      lastUpdated: new Date().toISOString(),\n    };\n\n    // Save to localStorage for immediate access\n    localStorage.setItem('doculaw_user_profile', JSON.stringify(profile));\n    localStorage.setItem('doculaw_onboarding', JSON.stringify(profileData));\n    \n    // Log the complete user profile structure for LLM integration\n    const profileForLLM = {\n      profile,\n      formattedContext: formatUserContextForLLM(profile),\n      savedAt: new Date().toISOString()\n    };\n    \n    console.log('=== USER PROFILE SAVED FOR LLM INTEGRATION ===');\n    console.log(JSON.stringify(profileForLLM, null, 2));\n    console.log('=== END USER PROFILE DATA ===');\n    \n    return profile;\n  } catch (error) {\n    console.error('Error saving user profile:', error);\n    throw error;\n  }\n};\n\n// Retrieve user profile data\nexport const getUserProfile = (): UserProfile | null => {\n  try {\n    const stored = localStorage.getItem('doculaw_user_profile');\n    return stored ? JSON.parse(stored) : null;\n  } catch (error) {\n    console.error('Error retrieving user profile:', error);\n    return null;\n  }\n};\n\n// Generate a unique user ID\nconst generateUserId = (): string => {\n  return `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n};\n\n// Get user preferences formatted for LLM context\nexport const getUserContextForLLM = (): string => {\n  const profile = getUserProfile();\n  if (!profile) return '';\n  return formatUserContextForLLM(profile);\n};\n\n// Helper function to format user profile for LLM context\nconst formatUserContextForLLM = (profile: UserProfile): string => {\n  return `User Profile:\n- Name: ${profile.name}\n- Primary Language: ${profile.primaryLanguage}\n- English Proficiency: ${profile.englishProficiency}\n- Legal Experience: ${profile.legalExperience}\n- Document Types Needed: ${profile.primaryNeeds.join(', ')}\n- Reading Preference: ${profile.readingPreference}\n- Communication Style: ${profile.communicationStyle}\n- Onboarding Completed: ${profile.dateCompleted}`;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}