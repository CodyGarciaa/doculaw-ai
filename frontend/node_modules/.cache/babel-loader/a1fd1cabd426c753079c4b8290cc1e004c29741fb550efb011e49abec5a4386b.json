{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import{authService}from'../services/dataService';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children}=_ref;const location=useLocation();const currentUser=authService.getCurrentUser();if(!currentUser){// Redirect to auth page with current location as redirect parameter\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/auth?redirect=\".concat(encodeURIComponent(location.pathname)),replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useLocation","authService","jsx","_jsx","Fragment","_Fragment","ProtectedRoute","_ref","children","location","currentUser","getCurrentUser","to","concat","encodeURIComponent","pathname","replace"],"sources":["/Users/azrayje/Documents/doculaw-ai/frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { authService } from '../services/dataService';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children }) => {\n  const location = useLocation();\n  const currentUser = authService.getCurrentUser();\n\n  if (!currentUser) {\n    // Redirect to auth page with current location as redirect parameter\n    return <Navigate to={`/auth?redirect=${encodeURIComponent(location.pathname)}`} replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,WAAW,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAMtD,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACjE,KAAM,CAAAE,QAAQ,CAAGT,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAU,WAAW,CAAGT,WAAW,CAACU,cAAc,CAAC,CAAC,CAEhD,GAAI,CAACD,WAAW,CAAE,CAChB;AACA,mBAAOP,IAAA,CAACJ,QAAQ,EAACa,EAAE,mBAAAC,MAAA,CAAoBC,kBAAkB,CAACL,QAAQ,CAACM,QAAQ,CAAC,CAAG,CAACC,OAAO,MAAE,CAAC,CAC5F,CAEA,mBAAOb,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}