{"ast":null,"code":"// File size formatting\nexport const formatFileSize = bytes => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n// Date formatting\nexport const formatDate = date => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  return d.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\nexport const formatRelativeTime = date => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  const now = new Date();\n  const diffInSeconds = Math.floor((now.getTime() - d.getTime()) / 1000);\n  if (diffInSeconds < 60) return 'just now';\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\n  if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)} days ago`;\n  return formatDate(d);\n};\n\n// Text processing\nexport const truncateText = (text, maxLength) => {\n  if (text.length <= maxLength) return text;\n  return text.slice(0, maxLength) + '...';\n};\nexport const highlightText = (text, searchTerm) => {\n  if (!searchTerm) return text;\n  const regex = new RegExp(`(${searchTerm})`, 'gi');\n  return text.replace(regex, '<mark>$1</mark>');\n};\nexport const extractKeywords = text => {\n  const commonWords = new Set(['the', 'be', 'to', 'of', 'and', 'a', 'in', 'that', 'have', 'it', 'for', 'not', 'on', 'with', 'he', 'as', 'you', 'do', 'at', 'this']);\n  return text.toLowerCase().replace(/[^\\w\\s]/g, '').split(/\\s+/).filter(word => word.length > 3 && !commonWords.has(word)).slice(0, 10);\n};\n\n// Legal document helpers\nexport const calculateComplexity = text => {\n  const words = text.split(/\\s+/);\n  const avgWordLength = words.reduce((sum, word) => sum + word.length, 0) / words.length;\n  const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 0);\n  const avgSentenceLength = words.length / sentences.length;\n\n  // Legal complexity indicators\n  const legalTerms = ['whereas', 'heretofore', 'pursuant', 'notwithstanding', 'aforementioned', 'covenant', 'indemnify', 'tortious', 'subpoena', 'affidavit'];\n  const legalTermCount = legalTerms.reduce((count, term) => {\n    return count + (text.toLowerCase().includes(term) ? 1 : 0);\n  }, 0);\n  const complexityScore = avgWordLength * 0.3 + avgSentenceLength * 0.4 + legalTermCount * 0.3;\n  if (complexityScore < 8) return 'low';\n  if (complexityScore < 15) return 'medium';\n  return 'high';\n};\nexport const getDocumentTypeFromMimeType = mimeType => {\n  const typeMap = {\n    'application/pdf': 'PDF Document',\n    'application/msword': 'Word Document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'Word Document',\n    'text/plain': 'Text Document',\n    'text/html': 'HTML Document',\n    'application/rtf': 'RTF Document'\n  };\n  return typeMap[mimeType] || 'Unknown Document';\n};\n\n// Validation helpers\nexport const isValidFileType = (file, acceptedTypes) => {\n  return acceptedTypes.indexOf(file.type) !== -1;\n};\nexport const isValidFileSize = (file, maxSizeInMB) => {\n  const maxSizeInBytes = maxSizeInMB * 1024 * 1024;\n  return file.size <= maxSizeInBytes;\n};\n\n// Search helpers\nexport const buildSearchQuery = (query, filters) => {\n  return {\n    query: query.trim(),\n    filters,\n    limit: 20,\n    offset: 0\n  };\n};\n\n// Error handling\nexport const getErrorMessage = error => {\n  var _error$response, _error$response$data;\n  if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.message) return error.response.data.message;\n  if (error.message) return error.message;\n  return 'An unexpected error occurred';\n};\n\n// CSS class utilities\nexport const clsx = (...classes) => {\n  return classes.filter(Boolean).join(' ');\n};\n\n// Local storage helpers\nexport const storage = {\n  get: key => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    } catch {\n      return null;\n    }\n  },\n  set: (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error('Failed to save to localStorage:', error);\n    }\n  },\n  remove: key => {\n    localStorage.removeItem(key);\n  },\n  clear: () => {\n    localStorage.clear();\n  }\n};\n\n// Generate unique IDs\nexport const generateId = () => {\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\n\n// User data management for onboarding\n\n// Save user profile data to user.json\nexport const saveUserProfile = async profileData => {\n  try {\n    const profile = {\n      ...profileData,\n      id: generateUserId(),\n      dateCompleted: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    };\n\n    // In a real application, this would make an API call to save to a backend\n    // For now, we'll save to localStorage and also update the user.json file concept\n    const profileJson = JSON.stringify(profile, null, 2);\n\n    // Save to localStorage for immediate access\n    localStorage.setItem('doculaw_user_profile', JSON.stringify(profile));\n    localStorage.setItem('doculaw_onboarding', JSON.stringify(profileData));\n\n    // Log the data that should be saved to user.json\n    console.log('User profile data to be saved to user.json:', profileJson);\n    return profile;\n  } catch (error) {\n    console.error('Error saving user profile:', error);\n    throw error;\n  }\n};\n\n// Retrieve user profile data\nexport const getUserProfile = () => {\n  try {\n    const stored = localStorage.getItem('doculaw_user_profile');\n    return stored ? JSON.parse(stored) : null;\n  } catch (error) {\n    console.error('Error retrieving user profile:', error);\n    return null;\n  }\n};\n\n// Generate a unique user ID\nconst generateUserId = () => {\n  return `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n};\n\n// Get user preferences formatted for LLM context\nexport const getUserContextForLLM = () => {\n  const profile = getUserProfile();\n  if (!profile) return '';\n  return `User Profile:\n- Name: ${profile.name}\n- Primary Language: ${profile.primaryLanguage}\n- English Proficiency: ${profile.englishProficiency}\n- Legal Experience: ${profile.legalExperience}\n- Document Types Needed: ${profile.primaryNeeds.join(', ')}\n- Reading Preference: ${profile.readingPreference}\n- Communication Style: ${profile.communicationStyle}\n- Onboarding Completed: ${profile.dateCompleted}`;\n};","map":{"version":3,"names":["formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","date","d","Date","toLocaleDateString","year","month","day","hour","minute","formatRelativeTime","now","diffInSeconds","getTime","truncateText","text","maxLength","length","slice","highlightText","searchTerm","regex","RegExp","replace","extractKeywords","commonWords","Set","toLowerCase","split","filter","word","has","calculateComplexity","words","avgWordLength","reduce","sum","sentences","s","trim","avgSentenceLength","legalTerms","legalTermCount","count","term","includes","complexityScore","getDocumentTypeFromMimeType","mimeType","typeMap","isValidFileType","file","acceptedTypes","indexOf","type","isValidFileSize","maxSizeInMB","maxSizeInBytes","size","buildSearchQuery","query","filters","limit","offset","getErrorMessage","error","_error$response","_error$response$data","response","data","message","clsx","classes","Boolean","join","storage","get","key","item","localStorage","getItem","JSON","parse","set","value","setItem","stringify","console","remove","removeItem","clear","generateId","toString","random","substr","saveUserProfile","profileData","profile","id","generateUserId","dateCompleted","toISOString","lastUpdated","profileJson","getUserProfile","stored","getUserContextForLLM","name","primaryLanguage","englishProficiency","legalExperience","primaryNeeds","readingPreference","communicationStyle"],"sources":["/Users/azrayje/Documents/doculaw-ai/frontend/src/utils/helpers.ts"],"sourcesContent":["// File size formatting\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\n// Date formatting\nexport const formatDate = (date: Date | string): string => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  return d.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n};\n\nexport const formatRelativeTime = (date: Date | string): string => {\n  const d = typeof date === 'string' ? new Date(date) : date;\n  const now = new Date();\n  const diffInSeconds = Math.floor((now.getTime() - d.getTime()) / 1000);\n  \n  if (diffInSeconds < 60) return 'just now';\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)} minutes ago`;\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)} hours ago`;\n  if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)} days ago`;\n  \n  return formatDate(d);\n};\n\n// Text processing\nexport const truncateText = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength) return text;\n  return text.slice(0, maxLength) + '...';\n};\n\nexport const highlightText = (text: string, searchTerm: string): string => {\n  if (!searchTerm) return text;\n  \n  const regex = new RegExp(`(${searchTerm})`, 'gi');\n  return text.replace(regex, '<mark>$1</mark>');\n};\n\nexport const extractKeywords = (text: string): string[] => {\n  const commonWords = new Set([\n    'the', 'be', 'to', 'of', 'and', 'a', 'in', 'that', 'have', 'it',\n    'for', 'not', 'on', 'with', 'he', 'as', 'you', 'do', 'at', 'this'\n  ]);\n  \n  return text\n    .toLowerCase()\n    .replace(/[^\\w\\s]/g, '')\n    .split(/\\s+/)\n    .filter(word => word.length > 3 && !commonWords.has(word))\n    .slice(0, 10);\n};\n\n// Legal document helpers\nexport const calculateComplexity = (text: string): 'low' | 'medium' | 'high' => {\n  const words = text.split(/\\s+/);\n  const avgWordLength = words.reduce((sum, word) => sum + word.length, 0) / words.length;\n  const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 0);\n  const avgSentenceLength = words.length / sentences.length;\n  \n  // Legal complexity indicators\n  const legalTerms = [\n    'whereas', 'heretofore', 'pursuant', 'notwithstanding', 'aforementioned',\n    'covenant', 'indemnify', 'tortious', 'subpoena', 'affidavit'\n  ];\n  \n  const legalTermCount = legalTerms.reduce((count, term) => {\n    return count + (text.toLowerCase().includes(term) ? 1 : 0);\n  }, 0);\n  \n  const complexityScore = (avgWordLength * 0.3) + (avgSentenceLength * 0.4) + (legalTermCount * 0.3);\n  \n  if (complexityScore < 8) return 'low';\n  if (complexityScore < 15) return 'medium';\n  return 'high';\n};\n\nexport const getDocumentTypeFromMimeType = (mimeType: string): string => {\n  const typeMap: Record<string, string> = {\n    'application/pdf': 'PDF Document',\n    'application/msword': 'Word Document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'Word Document',\n    'text/plain': 'Text Document',\n    'text/html': 'HTML Document',\n    'application/rtf': 'RTF Document',\n  };\n  \n  return typeMap[mimeType] || 'Unknown Document';\n};\n\n// Validation helpers\nexport const isValidFileType = (file: File, acceptedTypes: string[]): boolean => {\n  return acceptedTypes.indexOf(file.type) !== -1;\n};\n\nexport const isValidFileSize = (file: File, maxSizeInMB: number): boolean => {\n  const maxSizeInBytes = maxSizeInMB * 1024 * 1024;\n  return file.size <= maxSizeInBytes;\n};\n\n// Search helpers\nexport const buildSearchQuery = (\n  query: string,\n  filters?: {\n    documentType?: string[];\n    dateRange?: { start: Date; end: Date };\n    complexity?: string[];\n  }\n): any => {\n  return {\n    query: query.trim(),\n    filters,\n    limit: 20,\n    offset: 0,\n  };\n};\n\n// Error handling\nexport const getErrorMessage = (error: any): string => {\n  if (error.response?.data?.message) return error.response.data.message;\n  if (error.message) return error.message;\n  return 'An unexpected error occurred';\n};\n\n// CSS class utilities\nexport const clsx = (...classes: (string | undefined | null | boolean)[]): string => {\n  return classes.filter(Boolean).join(' ');\n};\n\n// Local storage helpers\nexport const storage = {\n  get: (key: string): any => {\n    try {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    } catch {\n      return null;\n    }\n  },\n  \n  set: (key: string, value: any): void => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error('Failed to save to localStorage:', error);\n    }\n  },\n  \n  remove: (key: string): void => {\n    localStorage.removeItem(key);\n  },\n  \n  clear: (): void => {\n    localStorage.clear();\n  },\n};\n\n// Generate unique IDs\nexport const generateId = (): string => {\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\n\n// User data management for onboarding\nexport interface UserProfile {\n  id: string;\n  name: string;\n  primaryLanguage: string;\n  englishProficiency: 'beginner' | 'intermediate' | 'advanced';\n  legalExperience: 'none' | 'some' | 'experienced';\n  primaryNeeds: string[];\n  readingPreference: 'simple' | 'standard' | 'detailed';\n  communicationStyle: 'visual' | 'text' | 'audio';\n  onboardingCompleted: boolean;\n  dateCompleted: string;\n  lastUpdated: string;\n}\n\n// Save user profile data to user.json\nexport const saveUserProfile = async (profileData: Omit<UserProfile, 'id' | 'dateCompleted' | 'lastUpdated'>): Promise<UserProfile> => {\n  try {\n    const profile: UserProfile = {\n      ...profileData,\n      id: generateUserId(),\n      dateCompleted: new Date().toISOString(),\n      lastUpdated: new Date().toISOString(),\n    };\n\n    // In a real application, this would make an API call to save to a backend\n    // For now, we'll save to localStorage and also update the user.json file concept\n    const profileJson = JSON.stringify(profile, null, 2);\n    \n    // Save to localStorage for immediate access\n    localStorage.setItem('doculaw_user_profile', JSON.stringify(profile));\n    localStorage.setItem('doculaw_onboarding', JSON.stringify(profileData));\n    \n    // Log the data that should be saved to user.json\n    console.log('User profile data to be saved to user.json:', profileJson);\n    \n    return profile;\n  } catch (error) {\n    console.error('Error saving user profile:', error);\n    throw error;\n  }\n};\n\n// Retrieve user profile data\nexport const getUserProfile = (): UserProfile | null => {\n  try {\n    const stored = localStorage.getItem('doculaw_user_profile');\n    return stored ? JSON.parse(stored) : null;\n  } catch (error) {\n    console.error('Error retrieving user profile:', error);\n    return null;\n  }\n};\n\n// Generate a unique user ID\nconst generateUserId = (): string => {\n  return `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n};\n\n// Get user preferences formatted for LLM context\nexport const getUserContextForLLM = (): string => {\n  const profile = getUserProfile();\n  if (!profile) return '';\n\n  return `User Profile:\n- Name: ${profile.name}\n- Primary Language: ${profile.primaryLanguage}\n- English Proficiency: ${profile.englishProficiency}\n- Legal Experience: ${profile.legalExperience}\n- Document Types Needed: ${profile.primaryNeeds.join(', ')}\n- Reading Preference: ${profile.readingPreference}\n- Communication Style: ${profile.communicationStyle}\n- Onboarding Completed: ${profile.dateCompleted}`;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}